
import { useCallback } from "react";
import { useToast } from "@/hooks/use-toast";
import { MenuItem } from "@/types/models";
import { supabaseAdmin } from "@/integrations/supabase/admin-client";
import { useAuth } from "@/contexts/AuthContext";

export const useDeleteMenuItem = (onItemDeleted: (items: MenuItem[]) => void, menuItems: MenuItem[]) => {
  const { toast } = useToast();
  const { user } = useAuth();

  const deleteMenuItem = useCallback(async (id: string) => {
    console.log("üóëÔ∏è DIAGNOSTIC: deleteMenuItem –≤–∏–∫–ª–∏–∫–∞–Ω–æ:", id);
    console.log("üîç DIAGNOSTIC: deleteMenuItem - –ø–æ—Ç–æ—á–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á:", user);
    
    if (!user?.id) {
      console.error("‚ùå DIAGNOSTIC: No user found for deleting menu item");
      toast({
        variant: "destructive",
        title: "–ü–æ–º–∏–ª–∫–∞",
        description: "–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø—É–Ω–∫—Ç—É –º–µ–Ω—é"
      });
      return false;
    }

    try {
      // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∏–π –∫–ª—ñ—î–Ω—Ç –¥–ª—è –æ–±—Ö–æ–¥—É RLS –ø—Ä–æ–±–ª–µ–º
      console.log("üóëÔ∏è DIAGNOSTIC: Deleting menu item with id:", id);
      
      const { error } = await supabaseAdmin
        .from("menu_items")
        .delete()
        .eq("id", id);
      
      if (error) {
        console.error("‚ùå DIAGNOSTIC: Supabase delete error:", error);
        throw new Error(`–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø—É–Ω–∫—Ç—É –º–µ–Ω—é: ${error.message}`);
      }
      
      const updatedItems = menuItems.filter(item => item.id !== id);
      console.log("‚úÖ DIAGNOSTIC: Updated menu items after deletion:", updatedItems);
      onItemDeleted(updatedItems);
      
      toast({
        title: "–ü—É–Ω–∫—Ç –º–µ–Ω—é –≤–∏–¥–∞–ª–µ–Ω–æ",
        description: `–ü—É–Ω–∫—Ç –º–µ–Ω—é —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ.`,
      });
      
      return true;
    } catch (err) {
      const error = err instanceof Error ? err : new Error('–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞');
      console.error("‚ùå DIAGNOSTIC: Error deleting menu item:", error);
      toast({
        variant: "destructive",
        title: "–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø—É–Ω–∫—Ç—É –º–µ–Ω—é",
        description: error.message
      });
      return false;
    }
  }, [toast, menuItems, onItemDeleted, user?.id]);

  return { deleteMenuItem };
};
