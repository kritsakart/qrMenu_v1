import { AppUser } from "@/types/auth";
import { clearStoredUser } from "./useStoredUser";
import { supabase } from "@/integrations/supabase/client";

/**
 * Hook for handling logout functionality
 */
export const useLogoutHandler = (setUser: (user: AppUser | null) => void) => {
  const logout = async () => {
    try {
      console.log("üö™ Logging out user...");
      
      // –û—á–∏—â–∞—î–º–æ localStorage
      clearStoredUser();
      
      // –û—á–∏—â–∞—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω
      setUser(null);
      
      // –û—á–∏—â–∞—î–º–æ Supabase —Å–µ—Å—ñ—é —è–∫—â–æ –≤–æ–Ω–∞ —ñ—Å–Ω—É—î
      const { error } = await supabase.auth.signOut();
      if (error) {
        console.warn("‚ö†Ô∏è Error signing out from Supabase:", error.message);
        // –ù–µ –∫–∏–¥–∞—î–º–æ –ø–æ–º–∏–ª–∫—É, –æ—Å–∫—ñ–ª—å–∫–∏ –ª–æ–∫–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω –≤–∂–µ –æ—á–∏—â–µ–Ω–∏–π
      } else {
        console.log("‚úÖ Successfully signed out from Supabase");
      }
      
      return Promise.resolve();
    } catch (error) {
      console.error("‚ùå Error during logout:", error);
      // –í—Å–µ –æ–¥–Ω–æ –æ—á–∏—â–∞—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω –Ω–∞–≤—ñ—Ç—å —è–∫—â–æ —î –ø–æ–º–∏–ª–∫–∞
      clearStoredUser();
      setUser(null);
      return Promise.resolve();
    }
  };

  return { logout };
};
